import com.slin.version.plugin.Libs
import com.slin.version.plugin.Versions

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    //添加Protobuf插件，使用kapt自动生成proto类文件，除了需要导入DataStore，还要导入protobuf插件
    id 'com.google.protobuf'
}

android {
    compileSdkVersion Versions.androidSdk

    defaultConfig {
        minSdkVersion Versions.androidMinSdk
        targetSdkVersion Versions.androidSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility Versions.javaVersion
        targetCompatibility Versions.javaVersion
    }
    kotlinOptions {
        jvmTarget = Versions.javaVersion
    }
    sourceSets{
        main{
            proto{
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
        }
    }
    namespace 'com.slin.proto'
}

dependencies {

    //DataStore & protobuf
    api Libs.Jetpack.dataStoreCore
    api Libs.Jetpack.dataStorePreferences
    api Libs.Jetpack.protobufLite

    testImplementation Libs.Test.junit
    androidTestImplementation Libs.Test.junitExt
    androidTestImplementation Libs.Test.espressoCore
}


//添加生成文件的task
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }

    // 生成
    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}