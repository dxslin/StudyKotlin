import com.slin.version.plugin.Libs
import com.slin.version.plugin.Versions

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.protobuf'
    id 'dagger.hilt.android.plugin'
}


android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.slin.study.kotlin"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        pulic {
            keyAlias 'public'
            keyPassword 'public'
            storeFile rootProject.file('public.jks')
            storePassword 'public'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.pulic
        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.pulic
        }
    }
    compileOptions {
        sourceCompatibility Versions.javaVersion
        targetCompatibility Versions.javaVersion
    }
    kotlinOptions {
        jvmTarget = Versions.javaVersion
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
        buildConfig = true
        aidl = true
    }
    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
        }
    }
    packagingOptions {
//        exclude 'lib/arm64-v8a/libc++_shared.so'
//        exclude 'lib/armeabi-v7a/libc++_shared.so'
    }
    namespace 'com.slin.study.kotlin'

    testOptions {
        managedDevices {
            devices {
                pixel2api30(com.android.build.api.dsl.ManagedVirtualDevice) {
                    // Use device profiles you typically see in Android Studio.
                    device = "Pixel 2"
                    // Use only API levels 27 and higher.
                    apiLevel = 31
                    // To include Google services, use "google".
                    systemImageSource = "aosp"
                    // Whether the image must be a 64 bit image. Defaults to
                    // false, in which case the managed device will use a
                    // 32 bit image. Not applicable to arm64 machines.
                    require64Bit = false
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation Libs.Kotlin.stdlib
    implementation Libs.Kotlin.Coroutines.core
    implementation Libs.Kotlin.reflect

    implementation 'androidx.databinding:viewbinding:8.0.2'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation "com.google.code.gson:gson:2.9.0"
    implementation project(path: ':jkid')

    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    implementation 'com.github.bumptech.glide:glide:4.13.1'

    implementation 'org.kodein.di:kodein-di-generic-jvm:6.0.1'
    implementation 'org.kodein.di:kodein-di-framework-android-core:6.0.1'
    implementation 'org.kodein.di:kodein-di-framework-android-x:6.0.1'

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    // Proto DataStore
    implementation "androidx.datastore:datastore-core:1.0.0"
    // You need to depend on the lite runtime library, not protobuf-java
    implementation "com.google.protobuf:protobuf-javalite:3.10.0"

    //WorkManager
    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:2.8.1"
    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:2.8.1"

    implementation Libs.Jetpack.hilt
    kapt Libs.Jetpack.hiltCompiler

    implementation Libs.Jetpack.startup

    implementation Libs.Logger.timber

    implementation Libs.Other.easyfloat
    implementation Libs.Other.longan
    implementation Libs.Other.longanDesign


    // 导入Matrix
    Libs.Matrix.implementationMatrix(it)


}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

//apply plugin: 'com.tencent.matrix-plugin'
//matrix {
//    trace {
//        enable = true    //if you don't want to use trace canary, set false
//        baseMethodMapFile = "${project.buildDir}/matrix_output/Debug.methodmap"
//        blackListFile = "${project.projectDir}/matrixTrace/blackMethodList.txt"
//    }
//}
