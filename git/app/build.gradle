apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.slin.git"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        Properties properties = new Properties()
        properties.load(rootProject.file("local.properties").newDataInputStream())
        buildConfigField "String", "CLIENT_ID", properties.getProperty("CLIENT_ID")
        buildConfigField "String", "CLIENT_SECRET", properties.getProperty("CLIENT_SECRET")
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding = true
        //如果使用dataBinding的话，只设置dataBinding的话不会自动生成对应的binding文件，需要编译才行，因此添加此设置
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(path: ':git:core')

    implementation Dependencies.kotlin_stdlib
    implementation Dependencies.appcompat

    implementation Dependencies.material
    implementation Dependencies.constraintlayout
    implementation Dependencies.vectordrawable
    implementation Dependencies.navigation_fragment
    implementation Dependencies.navigation_ui
    implementation Dependencies.navigation_fragment_ktx
    implementation Dependencies.navigation_ui_ktx
    implementation Dependencies.lifecycle_extensions
    implementation Dependencies.lifecycle_runtime
    //room
    implementation Dependencies.room
    implementation Dependencies.room_ktx
    kapt Dependencies.room_compiler
    //paging
    implementation Dependencies.paging_runtime


//    test
    testImplementation Dependencies.junit
    androidTestImplementation Dependencies.junit_ext
    androidTestImplementation Dependencies.espresso_core


}
